package com.ablehealth;

import com.ablehealth.model.*
import com.ablehealth.payloads.*;
import com.ablehealth.results.*;

import accumulate com.ablehealth.functions.LatestClinicalActivityWithDatetimeAccumulateFunction latestClinicalActivityWithDatetime;

global PatientResults controlSet;

rule 'Year2019.Cms139v7.Denominator'
when
    $program: Program(rules contains 'measure.Cms.2019.Cms139v7')
    $encounter: ClinicalActivity(
        startsDuring($program.measurementPeriod),
        endsDuring($program.measurementPeriod),
        withValueSet("VsacYear2019", "ANNUAL_WELLNESS_VISIT") ||
        withValueSet("VsacYear2019", "OFFICE_VISIT") ||
        withValueSet("VsacYear2019", "PREVENTIVE_CARE_SERVICES___ESTABLISHED_OFFICE_VISIT_18_AND_UP") ||
        withValueSet("VsacYear2019", "PREVENTIVE_CARE_SERVICES_INITIAL_OFFICE_VISIT_18_AND_UP") ||
        withValueSet("VsacYear2019", "HOME_HEALTHCARE_SERVICES") ||
        withValueSet("VsacYear2019", "OPHTHALMOLOGICAL_SERVICES") ||
        withValueSet("VsacYear2019", "PREVENTIVE_CARE_SERVICES_INDIVIDUAL_COUNSELING") ||
        withValueSet("VsacYear2019", "AUDIOLOGY_VISIT") ||
        withValueSet("VsacYear2019", "NURSING_FACILITY_VISIT") ||
        withValueSet("VsacYear2019", "DISCHARGE_SERVICES___NURSING_FACILITY") ||
        withValueSet("VsacYear2019", "CARE_SERVICES_IN_LONG_TERM_RESIDENTIAL_FACILITY")
    )
    $patient: Patient(
        getAgeInYearsAt($program.measurementPeriod.start) >= 65
    )
then
    insert(new EncounterDenominator($program, $encounter, 'Year2019.Cms139v7'));
end

rule 'Year2019.Cms139v7.Exclusion.exclusion_nonambulatory'
when
    EncounterDenominator($program: program, $encounter: clinicalActivity, measure == 'Year2019.Cms139v7')
    (
        exists ClinicalActivity(
        startsDuring($program.measurementPeriod),
        withValueSet("VsacYear2019", "AMBULATORY_STATUS"),
        withChildValueSet("VsacYear2019", "PATIENT_NOT_AMBULATORY")
        ) or (
            exists ClinicalActivity() from accumulate(
                $c: ClinicalActivity(
                    startsBefore($program.measurementPeriod.start),
                    withValueSet("VsacYear2019", "AMBULATORY_STATUS"),
                    withChildValueSet("VsacYear2019", "PATIENT_NOT_AMBULATORY")
                ),
                latestClinicalActivityWithDatetime($c)
            ) and not ClinicalActivity(
                startsDuring($program.measurementPeriod),
                withValueSet("VsacYear2019", "AMBULATORY_STATUS")
            )
        )
    )
    $patient: Patient()
then
    controlSet.addPatientMeasureStatus($program, $patient, 'Year2019.Cms139v7', MeasureStatusValue.EXCLUSION, "exclusion_nonambulatory");
    controlSet.addGroupPatientMeasureStatus($program, $patient, $encounter.groupExternalId,'Year2019.Cms139v7', MeasureStatusValue.EXCLUSION, "exclusion_nonambulatory");
    controlSet.addProviderPatientMeasureStatus($program, $patient, $encounter.providerExternalId,'Year2019.Cms139v7', MeasureStatusValue.EXCLUSION, "exclusion_nonambulatory");
end

rule 'Year2019.Cms139v7.Exclusion.exclusion_hospice'
when
    EncounterDenominator($program: program, $encounter: clinicalActivity, measure == 'Year2019.Cms139v7')
    (
        exists ClinicalActivity(
            endsDuring($program.measurementPeriod),
            withValueSet("VsacYear2019", "ENCOUNTER_INPATIENT"),
            withChildValueSet("VsacYear2019", "DISCHARGED_TO_HEALTH_CARE_FACILITY_FOR_HOSPICE_CARE") ||
            withChildValueSet("VsacYear2019", "DISCHARGED_TO_HOME_FOR_HOSPICE_CARE")
        )
        or exists Order(
            startsDuring($program.measurementPeriod),
            withValueSet("VsacYear2019", "HOSPICE_CARE_AMBULATORY")
        )
        or exists ClinicalActivity(
            overlaps($program.measurementPeriod),
            withValueSet("VsacYear2019", "HOSPICE_CARE_AMBULATORY")
        )
    )
    $patient: Patient()
then
    controlSet.addPatientMeasureStatus($program, $patient, 'Year2019.Cms139v7', MeasureStatusValue.EXCLUSION, "exclusion_hospice");
    controlSet.addGroupPatientMeasureStatus($program, $patient, $encounter.groupExternalId,'Year2019.Cms139v7', MeasureStatusValue.EXCLUSION, "exclusion_hospice");
    controlSet.addProviderPatientMeasureStatus($program, $patient, $encounter.providerExternalId,'Year2019.Cms139v7', MeasureStatusValue.EXCLUSION, "exclusion_hospice");
end

rule 'Year2019.Cms139v7.Success.performance_met'
when
    EncounterDenominator($program: program, $encounter: clinicalActivity, measure == 'Year2019.Cms139v7')
    exists ClinicalActivity(
        startsDuring($program.measurementPeriod),
        withValueSet("VsacYear2019", "FALLS_SCREENING")
    )
    $patient: Patient()
then
    controlSet.addPatientMeasureStatus($program, $patient, 'Year2019.Cms139v7', MeasureStatusValue.SUCCESS, "performance_met");
    controlSet.addGroupPatientMeasureStatus($program, $patient, $encounter.groupExternalId,'Year2019.Cms139v7', MeasureStatusValue.SUCCESS, "performance_met");
    controlSet.addProviderPatientMeasureStatus($program, $patient, $encounter.providerExternalId,'Year2019.Cms139v7', MeasureStatusValue.SUCCESS, "performance_met");
end

rule 'Year2019.Cms139v7.Gap.performance_not_met'
when
    EncounterDenominator($program: program, $encounter: clinicalActivity, measure == 'Year2019.Cms139v7')
    $patient: Patient()
then
    controlSet.addPatientMeasureStatus($program, $patient, 'Year2019.Cms139v7', MeasureStatusValue.GAP, "performance_not_met");
    controlSet.addGroupPatientMeasureStatus($program, $patient, $encounter.groupExternalId,'Year2019.Cms139v7', MeasureStatusValue.GAP, "performance_not_met");
    controlSet.addProviderPatientMeasureStatus($program, $patient, $encounter.providerExternalId,'Year2019.Cms139v7', MeasureStatusValue.GAP, "performance_not_met");
end
