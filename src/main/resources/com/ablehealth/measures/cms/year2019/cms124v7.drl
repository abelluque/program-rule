package com.ablehealth;

import com.ablehealth.model.*
import com.ablehealth.payloads.*;
import com.ablehealth.results.*;

global PatientResults controlSet;

rule 'Year2019.Cms124v7.Denominator'
when
    $program: Program(rules contains 'measure.Cms.2019.Cms124v7')
    $encounter: ClinicalActivity(
        startsDuring($program.measurementPeriod),
        endsDuring($program.measurementPeriod),
        withValueSet("VsacYear2019", "OFFICE_VISIT") ||
        withValueSet("VsacYear2019", "PREVENTIVE_CARE_SERVICES___ESTABLISHED_OFFICE_VISIT_18_AND_UP") ||
        withValueSet("VsacYear2019", "PREVENTIVE_CARE_SERVICES_INITIAL_OFFICE_VISIT_18_AND_UP") ||
        withValueSet("VsacYear2019", "HOME_HEALTHCARE_SERVICES")
    )
    exists Patient(
        getAgeInYearsAt($program.measurementPeriod.start) >= 23,
        getAgeInYearsAt($program.measurementPeriod.start) <= 64,
        sex == "female"
    )
then
    insert(new EncounterDenominator($program, $encounter, 'Year2019.Cms124v7'));
end

rule 'Year2019.Cms124v7.Exclusion.exclusion_cervix'
when
    EncounterDenominator($program: program, $encounter: clinicalActivity, measure == 'Year2019.Cms124v7')
    $patient: Patient()
    exists ClinicalActivity(
        endsBefore($program.measurementPeriod.end),
        withValueSet("VsacYear2019", "HYSTERECTOMY_WITH_NO_RESIDUAL_CERVIX")
    ) or exists Diagnosis(
        startsBefore($program.measurementPeriod.end),
        withValueSet("VsacYear2019", "CONGENITAL_ABSENCE_OF_CERVIX_DISORDER")
    )
then
    controlSet.addPatientMeasureStatus($program, $patient, 'Year2019.Cms124v7', MeasureStatusValue.EXCLUSION, "exclusion_cervix");
    controlSet.addGroupPatientMeasureStatus($program, $patient, $encounter.groupExternalId,'Year2019.Cms124v7', MeasureStatusValue.EXCLUSION, "exclusion_cervix");
    controlSet.addProviderPatientMeasureStatus($program, $patient, $encounter.providerExternalId,'Year2019.Cms124v7', MeasureStatusValue.EXCLUSION, "exclusion_cervix");
end

rule 'Year2019.Cms124v7.Exclusion.exclusion_hospice'
when
    EncounterDenominator($program: program, $encounter: clinicalActivity, measure == 'Year2019.Cms124v7')
    $patient: Patient()
    exists ClinicalActivity(
        endsDuring($program.measurementPeriod),
        withValueSet("VsacYear2019", "ENCOUNTER_INPATIENT"),
        withChildValueSet("VsacYear2019", "DISCHARGED_TO_HEALTH_CARE_FACILITY_FOR_HOSPICE_CARE") ||
        withChildValueSet("VsacYear2019", "DISCHARGED_TO_HOME_FOR_HOSPICE_CARE")
    )
    or exists Order(
        startsDuring($program.measurementPeriod),
        withValueSet("VsacYear2019", "HOSPICE_CARE_AMBULATORY")
    )
    or exists ClinicalActivity(
        overlaps($program.measurementPeriod),
        withValueSet("VsacYear2019", "HOSPICE_CARE_AMBULATORY")
    )
then
    controlSet.addPatientMeasureStatus($program, $patient, 'Year2019.Cms124v7', MeasureStatusValue.EXCLUSION, "exclusion_hospice");
    controlSet.addGroupPatientMeasureStatus($program, $patient, $encounter.groupExternalId,'Year2019.Cms124v7', MeasureStatusValue.EXCLUSION, "exclusion_hospice");
    controlSet.addProviderPatientMeasureStatus($program, $patient, $encounter.providerExternalId,'Year2019.Cms124v7', MeasureStatusValue.EXCLUSION, "exclusion_hospice");
end

rule 'Year2019.Cms124v7.Success.performance_met'
when
    EncounterDenominator($program: program, $encounter: clinicalActivity, measure == 'Year2019.Cms124v7')
    $patient: Patient()
    (
        exists LaboratoryTestPerformed(
            result != null,
            startsDuring($program.measurementPeriod.start.minusYears(3), $program.measurementPeriod.end),
            withValueSet("VsacYear2019", "PAP_TEST")
        ) or (
            exists Patient(
                getAgeInYearsAt($program.measurementPeriod.start) >= 30
            ) and
            (
                $papTest: LaboratoryTestPerformed(
                    startsDuring($program.measurementPeriod.start.minusYears(5), $program.measurementPeriod.end),
                    withValueSet("VsacYear2019", "PAP_TEST")
                )  and exists LaboratoryTestPerformed(
                    result != null,
                    startsDuring($papTest.startDate.minusDays(1), $papTest.startDate.plusDays(1)),
                    withValueSet("VsacYear2019", "HPV_TEST")
                )
            )
        )
    )
then
    controlSet.addPatientMeasureStatus($program, $patient, 'Year2019.Cms124v7', MeasureStatusValue.SUCCESS, "performance_met");
    controlSet.addGroupPatientMeasureStatus($program, $patient, $encounter.groupExternalId,'Year2019.Cms124v7', MeasureStatusValue.SUCCESS, "performance_met");
    controlSet.addProviderPatientMeasureStatus($program, $patient, $encounter.providerExternalId,'Year2019.Cms124v7', MeasureStatusValue.SUCCESS, "performance_met");
end

rule 'Year2019.Cms124v7.Gap.performance_not_met'
when
    EncounterDenominator($program: program, $encounter: clinicalActivity, measure == 'Year2019.Cms124v7')
    $patient: Patient()
then
    controlSet.addPatientMeasureStatus($program, $patient, 'Year2019.Cms124v7', MeasureStatusValue.GAP, "performance_not_met");
    controlSet.addGroupPatientMeasureStatus($program, $patient, $encounter.groupExternalId,'Year2019.Cms124v7', MeasureStatusValue.GAP, "performance_not_met");
    controlSet.addProviderPatientMeasureStatus($program, $patient, $encounter.providerExternalId,'Year2019.Cms124v7', MeasureStatusValue.GAP, "performance_not_met");
end
