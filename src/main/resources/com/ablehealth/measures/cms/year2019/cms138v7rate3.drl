package com.ablehealth;

import com.ablehealth.model.*
import com.ablehealth.payloads.*;
import com.ablehealth.results.*;

global PatientResults controlSet;

rule 'Year2019.Cms138v7Rate3.Denominator'
when
    $program: Program(rules contains 'measure.Cms.2019.Cms138v7Rate3')
    Year2019Cms138v7PreventiveVisit($encounter: encounter)
then
    insert(new EncounterDenominator($program, $encounter, 'Year2019.Cms138v7Rate3'));
    insert(new GroupEncounterDenominator($program, $encounter, 'Year2019.Cms138v7Rate3'));
    insert(new ProviderEncounterDenominator($program, $encounter, 'Year2019.Cms138v7Rate3'));
end

rule 'Year2019.Cms138v7Rate3.Denominator.TwoVisits.Org'
when
    $program: Program(rules contains 'measure.Cms.2019.Cms138v7Rate3')
    Year2019Cms138v7TwoVisitsOrg($encounter: encounter)
then
    insert(new EncounterDenominator($program, $encounter, 'Year2019.Cms138v7Rate3'));
end

rule 'Year2019.Cms138v7Rate3.Denominator.TwoVisits.Group'
when
    $program: Program(rules contains 'measure.Cms.2019.Cms138v7Rate3')
    Year2019Cms138v7TwoVisitsGroup($encounter: encounter)
then
    insert(new GroupEncounterDenominator($program, $encounter, 'Year2019.Cms138v7Rate3'));
end

rule 'Year2019.Cms138v7Rate3.Denominator.TwoVisits.Provider'
when
    $program: Program(rules contains 'measure.Cms.2019.Cms138v7Rate3')
    Year2019Cms138v7TwoVisitsProvider($encounter: encounter)
then
    insert(new ProviderEncounterDenominator($program, $encounter, 'Year2019.Cms138v7Rate3'));
end

rule 'Year2019.Cms138v7Rate3.Success.performance_met_user.Org'
when
    EncounterDenominator($program: program, $encounter: clinicalActivity, measure == 'Year2019.Cms138v7Rate3')
    $patient: Patient()
    (
        Year2019Cms138v7TobaccoUser($screening: screening)
        and Year2019Cms138v7Counseling()
    )
then
    controlSet.addPatientMeasureStatus($program, $patient, 'Year2019.Cms138v7Rate3', MeasureStatusValue.SUCCESS, "performance_met_user");
end

rule 'Year2019.Cms138v7Rate3.Success.performance_met_user.Group'
when
    GroupEncounterDenominator($program: program, $encounter: clinicalActivity, measure == 'Year2019.Cms138v7Rate3')
    $patient: Patient()
    (
        Year2019Cms138v7TobaccoUser($screening: screening)
        and Year2019Cms138v7Counseling()
    )
then
    controlSet.addGroupPatientMeasureStatus($program, $patient, $encounter.groupExternalId,'Year2019.Cms138v7Rate3', MeasureStatusValue.SUCCESS, "performance_met_user");
end

rule 'Year2019.Cms138v7Rate3.Success.performance_met_user.Provider'
when
    ProviderEncounterDenominator($program: program, $encounter: clinicalActivity, measure == 'Year2019.Cms138v7Rate3')
    $patient: Patient()
    (
        Year2019Cms138v7TobaccoUser($screening: screening)
        and Year2019Cms138v7Counseling()
    )
then
    controlSet.addProviderPatientMeasureStatus($program, $patient, $encounter.providerExternalId,'Year2019.Cms138v7Rate3', MeasureStatusValue.SUCCESS, "performance_met_user");
end

rule 'Year2019.Cms138v7Rate3.Success.performance_met_nonuser.Org'
when
    EncounterDenominator($program: program, $encounter: clinicalActivity, measure == 'Year2019.Cms138v7Rate3')
    $patient: Patient()
    Year2019Cms138v7TobaccoNonUser()
then
    controlSet.addPatientMeasureStatus($program, $patient, 'Year2019.Cms138v7Rate3', MeasureStatusValue.SUCCESS, "performance_met_nonuser");
end

rule 'Year2019.Cms138v7Rate3.Success.performance_met_nonuser.Group'
when
    GroupEncounterDenominator($program: program, $encounter: clinicalActivity, measure == 'Year2019.Cms138v7Rate3')
    $patient: Patient()
    Year2019Cms138v7TobaccoNonUser()
then
    controlSet.addGroupPatientMeasureStatus($program, $patient, $encounter.groupExternalId,'Year2019.Cms138v7Rate3', MeasureStatusValue.SUCCESS, "performance_met_nonuser");
end

rule 'Year2019.Cms138v7Rate3.Success.performance_met_nonuser.Provider'
when
    ProviderEncounterDenominator($program: program, $encounter: clinicalActivity, measure == 'Year2019.Cms138v7Rate3')
    $patient: Patient()
    Year2019Cms138v7TobaccoNonUser()
then
    controlSet.addProviderPatientMeasureStatus($program, $patient, $encounter.providerExternalId,'Year2019.Cms138v7Rate3', MeasureStatusValue.SUCCESS, "performance_met_nonuser");
end

rule 'Year2019.Cms138v7Rate3.Exception.exception_medicalreason.Org'
when
    EncounterDenominator($program: program, $encounter: clinicalActivity, measure == 'Year2019.Cms138v7Rate3')
    $patient: Patient()
    (
        Year2019Cms138v7MedicalReasonScreening()
        or Year2019Cms138v7MedicalReasonCounseling()
        or Year2019Cms138v7LimitedLife()
    )
then
    controlSet.addPatientMeasureStatus($program, $patient, 'Year2019.Cms138v7Rate3', MeasureStatusValue.EXCEPTION, "exception_medicalreason");
end

rule 'Year2019.Cms138v7Rate3.Exception.exception_medicalreason.Group'
when
    GroupEncounterDenominator($program: program, $encounter: clinicalActivity, measure == 'Year2019.Cms138v7Rate3')
    $patient: Patient()
    (
        Year2019Cms138v7MedicalReasonScreening()
        or Year2019Cms138v7MedicalReasonCounseling()
        or Year2019Cms138v7LimitedLife()
    )
then
    controlSet.addGroupPatientMeasureStatus($program, $patient, $encounter.groupExternalId,'Year2019.Cms138v7Rate3', MeasureStatusValue.EXCEPTION, "exception_medicalreason");
end

rule 'Year2019.Cms138v7Rate3.Exception.exception_medicalreason.Provider'
when
    ProviderEncounterDenominator($program: program, $encounter: clinicalActivity, measure == 'Year2019.Cms138v7Rate3')
    $patient: Patient()
    (
        Year2019Cms138v7MedicalReasonScreening()
        or Year2019Cms138v7MedicalReasonCounseling()
        or Year2019Cms138v7LimitedLife()
    )
then
    controlSet.addProviderPatientMeasureStatus($program, $patient, $encounter.providerExternalId,'Year2019.Cms138v7Rate3', MeasureStatusValue.EXCEPTION, "exception_medicalreason");
end

rule 'Year2019.Cms138v7Rate3.Gap.performance_not_met.Org'
when
    EncounterDenominator($program: program, $encounter: clinicalActivity, measure == 'Year2019.Cms138v7Rate3')
    $patient: Patient()
then
    controlSet.addPatientMeasureStatus($program, $patient, 'Year2019.Cms138v7Rate3', MeasureStatusValue.GAP, "performance_not_met");
end

rule 'Year2019.Cms138v7Rate3.Gap.performance_not_met.Group'
when
    GroupEncounterDenominator($program: program, $encounter: clinicalActivity, measure == 'Year2019.Cms138v7Rate3')
    $patient: Patient()
then
    controlSet.addGroupPatientMeasureStatus($program, $patient, $encounter.groupExternalId,'Year2019.Cms138v7Rate3', MeasureStatusValue.GAP, "performance_not_met");
end

rule 'Year2019.Cms138v7Rate3.Gap.performance_not_met.Provider'
when
    ProviderEncounterDenominator($program: program, $encounter: clinicalActivity, measure == 'Year2019.Cms138v7Rate3')
    $patient: Patient()
then
    controlSet.addProviderPatientMeasureStatus($program, $patient, $encounter.providerExternalId,'Year2019.Cms138v7Rate3', MeasureStatusValue.GAP, "performance_not_met");
end
