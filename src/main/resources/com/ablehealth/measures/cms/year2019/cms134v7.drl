package com.ablehealth;

import com.ablehealth.model.*
import com.ablehealth.payloads.*;
import com.ablehealth.results.*;

global PatientResults controlSet;

rule 'Year2019.Cms134v7.Denominator'
when
    $program: Program(rules contains 'measure.Cms.2019.Cms134v7')
    $encounter: ClinicalActivity(
        startsDuring($program.measurementPeriod),
        endsDuring($program.measurementPeriod),
        withValueSet("VsacYear2019", "OFFICE_VISIT") ||
        withValueSet("VsacYear2019", "ANNUAL_WELLNESS_VISIT") ||
        withValueSet("VsacYear2019", "PREVENTIVE_CARE_SERVICES___ESTABLISHED_OFFICE_VISIT_18_AND_UP") ||
        withValueSet("VsacYear2019", "PREVENTIVE_CARE_SERVICES_INITIAL_OFFICE_VISIT_18_AND_UP") ||
        withValueSet("VsacYear2019", "HOME_HEALTHCARE_SERVICES")
    )
    $patient: Patient(
        getAgeInYearsAt($program.measurementPeriod.start) >= 18 &&
        getAgeInYearsAt($program.measurementPeriod.start) < 75
    )
    exists Diagnosis(
        overlaps($program.measurementPeriod),
        withValueSet("VsacYear2019", "DIABETES")
    )
then
    insert(new EncounterDenominator($program, $encounter, 'Year2019.Cms134v7'));
end

rule 'Year2019.Cms134v7.Exclusion.exclusion_hospice'
when
    EncounterDenominator($program: program, $encounter: clinicalActivity, measure == 'Year2019.Cms134v7')
    $patient: Patient()
    (
        exists ClinicalActivity(
            endsDuring($program.measurementPeriod),
            withValueSet("VsacYear2019", "ENCOUNTER_INPATIENT"),
            withChildValueSet("VsacYear2019", "DISCHARGED_TO_HEALTH_CARE_FACILITY_FOR_HOSPICE_CARE") ||
            withChildValueSet("VsacYear2019", "DISCHARGED_TO_HOME_FOR_HOSPICE_CARE")
        )
        or exists Order(
            startsDuring($program.measurementPeriod),
            withValueSet("VsacYear2019", "HOSPICE_CARE_AMBULATORY")
        )
        or exists ClinicalActivity(
            overlaps($program.measurementPeriod),
            withValueSet("VsacYear2019", "HOSPICE_CARE_AMBULATORY")
        )
    )
then
    controlSet.addPatientMeasureStatus($program, $patient, 'Year2019.Cms134v7', MeasureStatusValue.EXCLUSION, "exclusion_hospice");
    controlSet.addGroupPatientMeasureStatus($program, $patient, $encounter.groupExternalId,'Year2019.Cms134v7', MeasureStatusValue.EXCLUSION, "exclusion_hospice");
    controlSet.addProviderPatientMeasureStatus($program, $patient, $encounter.providerExternalId,'Year2019.Cms134v7', MeasureStatusValue.EXCLUSION, "exclusion_hospice");
end

rule 'Year2019.Cms134v7.Success.performance_met_medication'
when
    EncounterDenominator($program: program, $encounter: clinicalActivity, measure == 'Year2019.Cms134v7')
    $patient: Patient()
    exists Medication(
        overlaps($program.measurementPeriod),
        withValueSet("VsacYear2019", "ACE_INHIBITOR_OR_ARB"),
        codeType == 'RXNORM'
    )
then
    controlSet.addPatientMeasureStatus($program, $patient, 'Year2019.Cms134v7', MeasureStatusValue.SUCCESS, "performance_met_medication");
    controlSet.addGroupPatientMeasureStatus($program, $patient, $encounter.groupExternalId,'Year2019.Cms134v7', MeasureStatusValue.SUCCESS, "performance_met_medication");
    controlSet.addProviderPatientMeasureStatus($program, $patient, $encounter.providerExternalId,'Year2019.Cms134v7', MeasureStatusValue.SUCCESS, "performance_met_medication");
end

rule 'Year2019.Cms134v7.Success.performance_met_diagnosis'
when
    EncounterDenominator($program: program, $encounter: clinicalActivity, measure == 'Year2019.Cms134v7')
    $patient: Patient()
    exists Diagnosis(
        overlaps($program.measurementPeriod),
        withValueSet("VsacYear2019", "HYPERTENSIVE_CHRONIC_KIDNEY_DISEASE") ||
        withValueSet("VsacYear2019", "KIDNEY_FAILURE") ||
        withValueSet("VsacYear2019", "GLOMERULONEPHRITIS_AND_NEPHROTIC_SYNDROME") ||
        withValueSet("VsacYear2019", "DIABETIC_NEPHROPATHY") ||
        withValueSet("VsacYear2019", "PROTEINURIA")
    )
then
    controlSet.addPatientMeasureStatus($program, $patient, 'Year2019.Cms134v7', MeasureStatusValue.SUCCESS, "performance_met_diagnosis");
    controlSet.addGroupPatientMeasureStatus($program, $patient, $encounter.groupExternalId,'Year2019.Cms134v7', MeasureStatusValue.SUCCESS, "performance_met_diagnosis");
    controlSet.addProviderPatientMeasureStatus($program, $patient, $encounter.providerExternalId,'Year2019.Cms134v7', MeasureStatusValue.SUCCESS, "performance_met_diagnosis");
end

rule 'Year2019.Cms134v7.Success.performance_met_screening'
when
    EncounterDenominator($program: program, $encounter: clinicalActivity, measure == 'Year2019.Cms134v7')
    $patient: Patient()
    (
        exists ClinicalActivity(
            startsDuring($program.measurementPeriod),
            withValueSet("VsacYear2019", "KIDNEY_TRANSPLANT") ||
            withValueSet("VsacYear2019", "VASCULAR_ACCESS_FOR_DIALYSIS") ||
            withValueSet("VsacYear2019", "DIALYSIS_SERVICES") ||
            withValueSet("VsacYear2019", "OTHER_SERVICES_RELATED_TO_DIALYSIS") ||
            withValueSet("VsacYear2019", "DIALYSIS_EDUCATION") ||
            withValueSet("VsacYear2019", "ESRD_MONTHLY_OUTPATIENT_SERVICES")
        ) or exists LaboratoryTestPerformed(
            startsDuring($program.measurementPeriod),
            withValueSet("VsacYear2019", "URINE_PROTEIN_TESTS"),
            resultAsDecimal != null
        )
    )
then
    controlSet.addPatientMeasureStatus($program, $patient, 'Year2019.Cms134v7', MeasureStatusValue.SUCCESS, "performance_met_screening");
    controlSet.addGroupPatientMeasureStatus($program, $patient, $encounter.groupExternalId,'Year2019.Cms134v7', MeasureStatusValue.SUCCESS, "performance_met_screening");
    controlSet.addProviderPatientMeasureStatus($program, $patient, $encounter.providerExternalId,'Year2019.Cms134v7', MeasureStatusValue.SUCCESS, "performance_met_screening");
end

rule 'Year2019.Cms134v7.Gap.performance_not_met'
when
    EncounterDenominator($program: program, $encounter: clinicalActivity, measure == 'Year2019.Cms134v7')
    $patient: Patient()
then
    controlSet.addPatientMeasureStatus($program, $patient, 'Year2019.Cms134v7', MeasureStatusValue.GAP, "performance_not_met");
    controlSet.addGroupPatientMeasureStatus($program, $patient, $encounter.groupExternalId,'Year2019.Cms134v7', MeasureStatusValue.GAP, "performance_not_met");
    controlSet.addProviderPatientMeasureStatus($program, $patient, $encounter.providerExternalId,'Year2019.Cms134v7', MeasureStatusValue.GAP, "performance_not_met");
end
