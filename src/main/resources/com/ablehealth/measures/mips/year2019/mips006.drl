package com.ablehealth;

import com.ablehealth.model.*
import com.ablehealth.payloads.*;
import com.ablehealth.results.*;

global PatientResults controlSet;

rule 'Year2019.Mips006.Denominator'
when
	$program: Program(rules contains 'measure.Mips.2019.Mips006')
	$patient: Patient()
	$encounter: ClinicalActivity(
		startsDuring($program.measurementPeriod),
		$patient.getAgeInYearsAt(startDate) >= 18,
		!hasModifier("GQ"),
		!hasModifier("GT"),
		!hasModifier("95"),
		placeOfService !="02",
		withValueSet("MipsYear2019", "MIPS_006_ENCOUNTER")
	)
	and
	(
		exists Diagnosis(
			overlaps($encounter),
			withValueSet("MipsYear2019", "CORONARY_ARTERY_DISEASE_CAD")
		)
	)
then
	insert(new EncounterDenominator($program, $encounter, 'Year2019.Mips006'));
end

rule 'Year2019.Mips006.Success.4086F'
when
	EncounterDenominator($program: program, $encounter: clinicalActivity, measure == 'Year2019.Mips006')
	$patient: Patient()
	(
		exists ClinicalActivity(
			startsDuring($program.measurementPeriod),
			codeModifiers.isEmpty(),
			withValueSet("MipsYear2019", "PERFORMANCE_MET_4086F")
		)
		or
		exists  Medication(
			overlaps($program.measurementPeriod),
			withValueSet("AbleYear2019", "ASPIRIN_AND_CLOPIDOGREL")
		)
	)
then
	controlSet.addPatientMeasureStatus($program, $patient, 'Year2019.Mips006', MeasureStatusValue.SUCCESS, "4086F");
	controlSet.addProviderPatientMeasureStatus($program, $patient, $encounter.providerExternalId,'Year2019.Mips006', MeasureStatusValue.SUCCESS, "4086F");
end

rule 'Year2019.Mips006.Exception.4086F-1P'
when
	EncounterDenominator($program: program, $encounter: clinicalActivity, measure == 'Year2019.Mips006')
	$patient: Patient()
	(
		exists ClinicalActivity(
			startsDuring($program.measurementPeriod),
			hasModifier("1P"),
			withValueSet("MipsYear2019", "DENOMINATOR_EXCEPTION_4086F_1P")
		)
		or exists Allergy(
			overlaps($program.measurementPeriod),
			withValueSet("AbleYear2019", "ASPIRIN_AND_CLOPIDOGREL")
		)
		or exists Medication(
			overlaps($program.measurementPeriod),
			withValueSet("AbleYear2019", "OTHER_THIENOPYRIDINE_AGENT")
		)
		or exists Medication(
			overlaps($program.measurementPeriod),
			withValueSet("VsacYear2019", "WARFARIN")
		)
		or exists Diagnosis(
			overlaps($program.measurementPeriod),
			withValueSet("AbleYear2019", "THROMBOCYTOPENIA")
		)
	)
then
	controlSet.addPatientMeasureStatus($program, $patient, 'Year2019.Mips006', MeasureStatusValue.EXCEPTION, "4086F-1P");
	controlSet.addProviderPatientMeasureStatus($program, $patient, $encounter.providerExternalId,'Year2019.Mips006', MeasureStatusValue.EXCEPTION, "4086F-1P");
end

rule 'Year2019.Mips006.Exception.4086F-2P'
when
	EncounterDenominator($program: program, $encounter: clinicalActivity, measure == 'Year2019.Mips006')
	$patient: Patient()
	exists ClinicalActivity(
		startsDuring($program.measurementPeriod),
		hasModifier("2P"),
		withValueSet("MipsYear2019", "DENOMINATOR_EXCEPTION_4086F_2P")
	)
then
	controlSet.addPatientMeasureStatus($program, $patient, 'Year2019.Mips006', MeasureStatusValue.EXCEPTION, "4086F-2P");
	controlSet.addProviderPatientMeasureStatus($program, $patient, $encounter.providerExternalId,'Year2019.Mips006', MeasureStatusValue.EXCEPTION, "4086F-2P");
end

rule 'Year2019.Mips006.Exception.4086F-3P'
when
	EncounterDenominator($program: program, $encounter: clinicalActivity, measure == 'Year2019.Mips006')
	$patient: Patient()
	exists ClinicalActivity(
		startsDuring($program.measurementPeriod),
		hasModifier("3P"),
		withValueSet("MipsYear2019", "DENOMINATOR_EXCEPTION_4086F_3P")
	)
then
	controlSet.addPatientMeasureStatus($program, $patient, 'Year2019.Mips006', MeasureStatusValue.EXCEPTION, "4086F-3P");
	controlSet.addProviderPatientMeasureStatus($program, $patient, $encounter.providerExternalId,'Year2019.Mips006', MeasureStatusValue.EXCEPTION, "4086F-3P");
end

rule 'Year2019.Mips006.Gap.4086F-8P'
when
	EncounterDenominator($program: program, $encounter: clinicalActivity, measure == 'Year2019.Mips006')
	$patient: Patient()
then
	controlSet.addPatientMeasureStatus($program, $patient, 'Year2019.Mips006', MeasureStatusValue.GAP, "4086F-8P");
	controlSet.addProviderPatientMeasureStatus($program, $patient, $encounter.providerExternalId,'Year2019.Mips006', MeasureStatusValue.GAP, "4086F-8P");
end