package com.ablehealth.measures.mips.year2019;

import com.ablehealth.model.*
import com.ablehealth.payloads.*;
import com.ablehealth.results.*;
import java.time.LocalDate;

import accumulate com.ablehealth.functions.LatestClinicalActivityAccumulateFunction latestClinicalActivity;
import accumulate com.ablehealth.functions.EarliestClinicalActivityAccumulateFunction earliestClinicalActivity;

global PatientResults controlSet;

declare EncounterQuantity
	startDate: LocalDate
	providerExternalId: String
end

declare PatientPerformanceMet
	patient: Patient
end

rule "Year2019.Mips441.DenominatorEncounters"
when
	$program: Program(rules contains 'measure.Mips.2019.Mips441')
	$record: ClinicalActivity(
		startsDuring(
			$program.measurementPeriod.end.plusDays(1).minusMonths(24),
			$program.measurementPeriod.end
		),
		withValueSet("MipsYear2019", "MIPS_441_ENCOUNTER")
	)
	Patient(
		getAgeInYearsAt($record.startDate) >= 18 &&
		getAgeInYearsAt($record.startDate) <= 74
	)
then
	insert(new EncounterQuantity($record.startDate, $record.providerExternalId));
end

rule "Year2019.Mips441.PatientPerformanceMet"
when
	$program: Program(rules contains 'measure.Mips.2019.Mips441')
	$patient: Patient()
	(
		exists (
			(
				ClinicalActivity(
					startsDuring($program.measurementPeriod),
					withValueSet("MipsYear2019", "PERFORMANCE_MET_G9788") || 
					withValueSet("MipsYear2019", "DENOMINATOR_EXCEPTION_G9789")
				)
				or (
					ClinicalActivity(resultAsDecimal <= 120) from accumulate (
						$systolic: ClinicalActivity(
							startsDuring($program.measurementPeriod),
							withValueSet("VsacYear2019", "SYSTOLIC_BLOOD_PRESSURE"),
							resultAsDecimal != null
						),
						latestClinicalActivity($systolic)
					)
					and ClinicalActivity(resultAsDecimal <= 90) from accumulate (
						$diastolic: ClinicalActivity(
							startsDuring($program.measurementPeriod),
							withValueSet("VsacYear2019", "DIASTOLIC_BLOOD_PRESSURE"),
							resultAsDecimal != null
						),
						latestClinicalActivity($diastolic)
					)
				)
			)
			and (
				ClinicalActivity(
					startsDuring($program.measurementPeriod),
					withValueSet("MipsYear2019", "PERFORMANCE_MET_G9791")
				)
				or ClinicalActivity(withValueSet("VsacYear2019", "TOBACCO_NON_USER")) from accumulate (
					$c: ClinicalActivity(
						startsDuring($program.measurementPeriod),
						withValueSet("VsacYear2019", "TOBACCO_NON_USER") ||
						withValueSet("VsacYear2019", "TOBACCO_USER")
					),
					latestClinicalActivity($c)
				)
			)
			and (
				ClinicalActivity(
					startsDuring($program.measurementPeriod),
					withValueSet("MipsYear2019", "PERFORMANCE_MET_G9793") ||
					withValueSet("MipsYear2019", "PERFORMANCE_MET_G9794")
				)
				or ClinicalActivity(
					startsOnOrBefore($program.measurementPeriod.end),
					withValueSet("VsacYear2019", "GASTRIC_BYPASS_SURGERY")
				)
				or Medication(
					overlaps($program.measurementPeriod),
					withValueSet("VsacYear2019", "ASPIRIN_AND_OTHER_ANTIPLATELETS") ||
					withValueSet("VsacYear2019", "ANTICOAGULANT_MEDICATIONS")
				)
				or Diagnosis(
					startsBefore($program.measurementPeriod.end),
					withValueSet("VsacYear2019", "GASTROINTESTINAL_HEMORRHAGE")
				)
			)
			and (
				ClinicalActivity(
					startsDuring($program.measurementPeriod),
					withValueSet("MipsYear2019", "PERFORMANCE_MET_G9796") ||
					withValueSet("MipsYear2019", "PERFORMANCE_MET_G9940")
				)
				or Medication(
					overlaps($program.measurementPeriod),
					withValueSet("VsacYear2019", "LOW_INTENSITY_STATIN_THERAPY") ||
					withValueSet("VsacYear2019", "MODERATE_INTENSITY_STATIN_THERAPY") ||
					withValueSet("VsacYear2019", "HIGH_INTENSITY_STATIN_THERAPY")
				)
				or Diagnosis(
					overlaps(
						$program.measurementPeriod.end.plusDays(1).minusMonths(24),
						$program.measurementPeriod.end
					),
					withValueSet("VsacYear2019", "PREGNANCY_DX") ||
					withValueSet("VsacYear2019", "CIRRHOSIS") ||
					withValueSet("HedisYear2019", "MUSCULAR_PAIN_AND_DISEASE") ||
					withValueSet("MipsYear2019", "ESRD")
				)
				or ClinicalActivity(
					startsDuring(
						$program.measurementPeriod.end.plusDays(1).minusMonths(24),
						$program.measurementPeriod.end
					),
					withValueSet("VsacYear2019", "ESRD_MONTHLY_OUTPATIENT_SERVICES") ||
					withValueSet("VsacYear2019", "KIDNEY_TRANSPLANT")
				)
			)
		)
	)
then
	insert(new PatientPerformanceMet($patient));
end

rule 'Year2019.Mips441.Denominator.Org'
when
	$program: Program(rules contains 'measure.Mips.2019.Mips441')
	$encounter: ClinicalActivity(
		startsDuring($program.measurementPeriod),
		withValueSet("MipsYear2019", "MIPS_441_ENCOUNTER")
	)
	$patient: Patient()
	java.util.Set(size >=2) from accumulate (
		EncounterQuantity($start: startDate, $provider: providerExternalId);
		collectSet($start.toString())
	)
	and (
		exists Diagnosis(
			overlaps($program.measurementPeriod),
			withValueSet("MipsYear2019", "MIPS_441_CAD")
		)
		or exists ClinicalActivity(
			startsDuring(
				$program.measurementPeriod.end.plusDays(1).minusMonths(24),
				$program.measurementPeriod.end
			),
			withValueSet("MipsYear2019", "MIPS_441_PCI") || 
			withValueSet("MipsYear2019", "MIPS_441_CABG")
		)
		or exists Diagnosis(
			startsDuring(
				$program.measurementPeriod.end.plusDays(1).minusMonths(24),
				$program.measurementPeriod.end
			),
			withValueSet("MipsYear2019", "MIPS_441_AMI")
		)
	)
then
	insert(new EncounterDenominator($program, $encounter, 'Year2019.Mips441'));
end

rule 'Year2019.Mips441.Denominator.Provider'
when
	$program: Program(rules contains 'measure.Mips.2019.Mips441')
	$encounter: ClinicalActivity(
		startsDuring($program.measurementPeriod),
		withValueSet("MipsYear2019", "MIPS_441_ENCOUNTER")
	)
	$patient: Patient()
	java.util.Set(size >=2) from accumulate (
		EncounterQuantity(
			$start: startDate,
			$provider: providerExternalId,
			$provider == $encounter.providerExternalId
		);
		collectSet($start.toString())
	)
	and (
		exists Diagnosis(
			overlaps($program.measurementPeriod),
			withValueSet("MipsYear2019", "MIPS_441_CAD")
		)
		or exists ClinicalActivity(
			startsDuring(
				$program.measurementPeriod.end.plusDays(1).minusMonths(24),
				$program.measurementPeriod.end
			),
			withValueSet("MipsYear2019", "MIPS_441_PCI") || 
			withValueSet("MipsYear2019", "MIPS_441_CABG")
		)
		or exists Diagnosis(
			startsDuring(
				$program.measurementPeriod.end.plusDays(1).minusMonths(24),
				$program.measurementPeriod.end
			),
			withValueSet("MipsYear2019", "MIPS_441_AMI")
		)
	)
then
	insert(new ProviderEncounterDenominator($program, $encounter, 'Year2019.Mips441'));
end

rule 'Year2019.Mips441.Success.performance_met.Org'
when
	EncounterDenominator($program: program, $encounter: clinicalActivity, measure == 'Year2019.Mips441')
	PatientPerformanceMet($patient: patient)
then
	controlSet.addPatientMeasureStatus($program, $patient, 'Year2019.Mips441', MeasureStatusValue.SUCCESS, "performance_met");
end

rule 'Year2019.Mips441.Success.performance_met.Provider'
when
	ProviderEncounterDenominator($program: program, $encounter: clinicalActivity, measure == 'Year2019.Mips441')
	PatientPerformanceMet($patient: patient)
then
	controlSet.addProviderPatientMeasureStatus($program, $patient, $encounter.providerExternalId,'Year2019.Mips441', MeasureStatusValue.SUCCESS, "performance_met");
end

rule 'Year2019.Mips441.Gap.performance_not_met.Org'
when
	EncounterDenominator($program: program, $encounter: clinicalActivity, measure == 'Year2019.Mips441')
	$patient: Patient()
then
	controlSet.addPatientMeasureStatus($program, $patient, 'Year2019.Mips441', MeasureStatusValue.GAP, "performance_not_met");
end

rule 'Year2019.Mips441.Gap.performance_not_met.Provider'
when
	ProviderEncounterDenominator($program: program, $encounter: clinicalActivity, measure == 'Year2019.Mips441')
	$patient: Patient()
then
	controlSet.addProviderPatientMeasureStatus($program, $patient, $encounter.providerExternalId,'Year2019.Mips441', MeasureStatusValue.GAP, "performance_not_met");
end
