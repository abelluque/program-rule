package com.ablehealth;

import com.ablehealth.model.*
import com.ablehealth.payloads.*;
import com.ablehealth.results.*;

global PatientResults controlSet;

rule 'Year2019.Mips052.Denominator'
when
    $program: Program(rules contains 'measure.Mips.2019.Mips052')
    $encounter: ClinicalActivity(
        startsDuring($program.measurementPeriod),
        placeOfService != '02',
        codeModifiers not contains 'GQ' && not contains 'GT' && not contains '95',
        withValueSet("MipsYear2019", "MIPS_052_ENCOUNTER")
    )
    Patient(
        getAgeInYearsAt($encounter.startDate) >= 18
    )
    exists Diagnosis(
        overlaps($encounter),
        withValueSet("MipsYear2019", "COPD")
    )
    and exists ClinicalActivity(
        startsDuring($program.measurementPeriod),
        withValueSet("MipsYear2019", "FEV1_FVC_70_FEV1_60_COPD_SYMPTOMS")
    )
then
    insert(new EncounterDenominator($program, $encounter, 'Year2019.Mips052'));
end

rule 'Year2019.Mips052.Success.G9695'
when
    EncounterDenominator($program: program, $encounter: clinicalActivity, measure == 'Year2019.Mips052')
    $patient: Patient()
    and (
        exists ClinicalActivity(
            startsDuring($program.measurementPeriod),
            withValueSet("MipsYear2019", "PERFORMANCE_MET_G9695")
        )
        or exists Medication(
            overlaps($program.measurementPeriod),
            withValueSet("AbleYear2019", "LONG_ACTING_INHALED_BRONCHODILATOR")
        )
    )
then
    controlSet.addPatientMeasureStatus($program, $patient, 'Year2019.Mips052', MeasureStatusValue.SUCCESS, "G9695");
    controlSet.addProviderPatientMeasureStatus($program, $patient, $encounter.providerExternalId,'Year2019.Mips052', MeasureStatusValue.SUCCESS, "G9695");
end

rule 'Year2019.Mips052.Exception.G9696'
when
    EncounterDenominator($program: program, $encounter: clinicalActivity, measure == 'Year2019.Mips052')
    $patient: Patient()
    and exists ClinicalActivity(
        startsDuring($encounter),
        withValueSet("MipsYear2019", "DENOMINATOR_EXCEPTION_G9696")
    )
then
    controlSet.addPatientMeasureStatus($program, $patient, 'Year2019.Mips052', MeasureStatusValue.EXCEPTION, "G9696");
    controlSet.addProviderPatientMeasureStatus($program, $patient, $encounter.providerExternalId,'Year2019.Mips052', MeasureStatusValue.EXCEPTION, "G9696");
end

rule 'Year2019.Mips052.Exception.G9697'
when
    EncounterDenominator($program: program, $encounter: clinicalActivity, measure == 'Year2019.Mips052')
    $patient: Patient()
    and exists ClinicalActivity(
        startsDuring($encounter),
        withValueSet("MipsYear2019", "DENOMINATOR_EXCEPTION_G9697")
    )
then
    controlSet.addPatientMeasureStatus($program, $patient, 'Year2019.Mips052', MeasureStatusValue.EXCEPTION, "G9697");
    controlSet.addProviderPatientMeasureStatus($program, $patient, $encounter.providerExternalId,'Year2019.Mips052', MeasureStatusValue.EXCEPTION, "G9697");
end

rule 'Year2019.Mips052.Exception.G9698'
when
    EncounterDenominator($program: program, $encounter: clinicalActivity, measure == 'Year2019.Mips052')
    $patient: Patient()
    and exists ClinicalActivity(
        startsDuring($encounter),
        withValueSet("MipsYear2019", "DENOMINATOR_EXCEPTION_G9698")
    )
then
    controlSet.addPatientMeasureStatus($program, $patient, 'Year2019.Mips052', MeasureStatusValue.EXCEPTION, "G9698");
    controlSet.addProviderPatientMeasureStatus($program, $patient, $encounter.providerExternalId,'Year2019.Mips052', MeasureStatusValue.EXCEPTION, "G9698");
end

rule 'Year2019.Mips052.Gap.G9699'
when
    EncounterDenominator($program: program, $encounter: clinicalActivity, measure == 'Year2019.Mips052')
    $patient: Patient()
then
    controlSet.addPatientMeasureStatus($program, $patient, 'Year2019.Mips052', MeasureStatusValue.GAP, "G9699");
    controlSet.addProviderPatientMeasureStatus($program, $patient, $encounter.providerExternalId,'Year2019.Mips052', MeasureStatusValue.GAP, "G9699");
end
