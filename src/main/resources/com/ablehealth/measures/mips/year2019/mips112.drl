package com.ablehealth;

import com.ablehealth.model.*
import com.ablehealth.payloads.*;
import com.ablehealth.results.*;

global PatientResults controlSet;

rule 'Year2019.Mips112.Denominator'
when
    $program: Program(rules contains 'measure.Mips.2019.Mips112')
    $mips112encounter: ClinicalActivity(
        startsDuring($program.measurementPeriod),
        withValueSet("MipsYear2019", "MIPS_112_ENCOUNTER")
    )
    exists Patient(
        getAgeInYearsAt($mips112encounter.startDate) >= 51,
        getAgeInYearsAt($mips112encounter.startDate) < 74,
        sex == "female"
    )
then
    insert(new EncounterDenominator($program, $mips112encounter, 'Year2019.Mips112'));
end

rule 'Year2019.Mips112.Exclusion.exclusion_1'
when
    EncounterDenominator($program: program, $encounter: clinicalActivity, measure == 'Year2019.Mips112')
    $patient: Patient()
    (
        exists ClinicalActivity(
            startsBefore($program.measurementPeriod.end),
            withValueSet("MipsYear2019", "HISTORY_OF_MASTECTOMY_G9708")
        )
        or exists ClinicalActivity(
            startsBefore($program.measurementPeriod.end),
            withValueSet("VsacYear2019", "BILATERAL_MASTECTOMY")
        )
        or exists ClinicalActivity(
            startsBefore($program.measurementPeriod.end),
            withValueSet("VsacYear2019", "HISTORY_OF_BILATERAL_MASTECTOMY")
        )
        or exists Diagnosis(
            startsBefore($program.measurementPeriod.end),
            withValueSet("VsacYear2019", "HISTORY_OF_BILATERAL_MASTECTOMY")
        )
        or (
            exists ClinicalActivity(
                startsBefore($program.measurementPeriod.end),
                withValueSet("VsacYear2019", "STATUS_POST_LEFT_MASTECTOMY")
            )
            and exists ClinicalActivity(
                startsBefore($program.measurementPeriod.end),
                withValueSet("VsacYear2019", "STATUS_POST_RIGHT_MASTECTOMY")
            )
        )
        or (
            exists Diagnosis(
                startsBefore($program.measurementPeriod.end),
                withValueSet("VsacYear2019", "STATUS_POST_LEFT_MASTECTOMY")
            )
            and exists Diagnosis(
                startsBefore($program.measurementPeriod.end),
                withValueSet("VsacYear2019", "STATUS_POST_RIGHT_MASTECTOMY")
            )
        )
    )
then
  controlSet.addPatientMeasureStatus($program, $patient, 'Year2019.Mips112', MeasureStatusValue.EXCLUSION, "exclusion_1");
  controlSet.addProviderPatientMeasureStatus($program, $patient, $encounter.providerExternalId, 'Year2019.Mips112', MeasureStatusValue.EXCLUSION, "exclusion_1");
end

rule 'Year2019.Mips112.Exclusion.exclusion_2'
when
  EncounterDenominator($program: program, $encounter: clinicalActivity, measure == 'Year2019.Mips112')
  $patient: Patient()
  (
        exists ClinicalActivity(
            overlaps($program.measurementPeriod),
            withValueSet("VsacYear2019", "PALLIATIVE_CARE")
        )
        or exists ClinicalActivity(
            startsDuring($program.measurementPeriod),
            withValueSet("MipsYear2019", "MIPS_HOSPICE_SERVICE")
        )
  )
then
  controlSet.addPatientMeasureStatus($program, $patient, 'Year2019.Mips112', MeasureStatusValue.EXCLUSION, "exclusion_2");
  controlSet.addProviderPatientMeasureStatus($program, $patient, $encounter.providerExternalId, 'Year2019.Mips112', MeasureStatusValue.EXCLUSION, "exclusion_2");
end

rule 'Year2019.Mips112.Exclusion.exclusion_3'
when
    EncounterDenominator($program: program, $encounter: clinicalActivity, measure == 'Year2019.Mips112')
    $patient: Patient()
    (
        (
            $institutionalProcedure: ClinicalActivity(
                startsDuring($program.measurementPeriod),
                withValueSet("MipsYear2019", "INSTITUTIONAL_EXCLUSION")
            )
            and exists Patient(
                getAgeInYearsAt($institutionalProcedure.startDate) >= 65
            )
        )
        or (
            $careServicesProcedure: ClinicalActivity(
                startsDuring($program.measurementPeriod),
                placeOfService in ('32','33','34','54','56'),
                withValueSet("VsacYear2019", "CARE_SERVICES_IN_LONG_TERM_RESIDENTIAL_FACILITY")
            )
            and exists Patient(
                getAgeInYearsAt($careServicesProcedure.startDate) >= 65
            )
        )
    )
then
  controlSet.addPatientMeasureStatus($program, $patient, 'Year2019.Mips112', MeasureStatusValue.EXCLUSION, "exclusion_3");
  controlSet.addProviderPatientMeasureStatus($program, $patient, $encounter.providerExternalId, 'Year2019.Mips112', MeasureStatusValue.EXCLUSION, "exclusion_3");
end

rule 'Year2019.Mips112.Success.G9899'
when
    EncounterDenominator($program: program, $encounter: clinicalActivity, measure == 'Year2019.Mips112')
    $patient: Patient()
    (
      exists ClinicalActivity(
          startsDuring($program.measurementPeriod.end.minusMonths(27).plusDays(1), $program.measurementPeriod.end),
          withValueSet("MipsYear2018", "PERFORMANCE_MET_G9899") ||
          withValueSet("AbleYear2018", "MAMMOGRAM") ||
          withValueSet("VsacYear2018", "MAMMOGRAPHY")
      )
      or exists LaboratoryTestPerformed(
          startsDuring($program.measurementPeriod.end.minusMonths(27).plusDays(1), $program.measurementPeriod.end),
          withValueSet("AbleYear2018", "MAMMOGRAM") ||
          withValueSet("VsacYear2018", "MAMMOGRAPHY")
      )
    )
then
    controlSet.addPatientMeasureStatus($program, $patient, 'Year2019.Mips112', MeasureStatusValue.SUCCESS, "G9899");
    controlSet.addProviderPatientMeasureStatus($program, $patient, $encounter.providerExternalId, 'Year2019.Mips112', MeasureStatusValue.SUCCESS, "G9899");
end

rule 'Year2019.Mips112.Gap.G9900'
when
    EncounterDenominator($program: program, $encounter: clinicalActivity, measure == 'Year2019.Mips112')
    $patient: Patient()
then
    controlSet.addPatientMeasureStatus($program, $patient, 'Year2019.Mips112', MeasureStatusValue.GAP, "G9900");
    controlSet.addProviderPatientMeasureStatus($program, $patient, $encounter.providerExternalId, 'Year2019.Mips112', MeasureStatusValue.GAP, "G9900");
end
