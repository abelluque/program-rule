package com.ablehealth.measures.mips.year2019;

import com.ablehealth.model.*
import com.ablehealth.payloads.*;
import com.ablehealth.results.*;

global PatientResults controlSet;

rule 'Year2019.Mips076.Denominator'
when
	$program: Program(rules contains 'measure.Mips.2019.Mips076')
	$encounter: ClinicalActivity(
		startsDuring($program.measurementPeriod),
		withValueSet("MipsYear2019", "MIPS_076_PROCEDURE")
	)
then
	insert(new EncounterDenominator($program, $encounter, 'Year2019.Mips076'));
end

rule 'Year2019.Mips076.Success.6030F'
when
	EncounterDenominator($program: program, $encounter: clinicalActivity, measure == 'Year2019.Mips076')
	and exists (
		ClinicalActivity(
			startsDuring($encounter),
			codeModifiers.isEmpty(),
			withValueSet("MipsYear2019", "PERFORMANCE_MET_6030F")
		)
	)
then
	controlSet.addEncounterMeasureStatus($program, $encounter, 'Year2019.Mips076', MeasureStatusValue.SUCCESS, "6030F");
end

rule 'Year2019.Mips076.Exception.6030F-1P'
when
	EncounterDenominator($program: program, $encounter: clinicalActivity, measure == 'Year2019.Mips076')
	and exists (
		ClinicalActivity(
			startsDuring($encounter),
			codeModifiers contains '1P',
			withValueSet("MipsYear2019", "DENOMINATOR_EXCEPTION_6030F_1P")
		)
	)
then
	controlSet.addEncounterMeasureStatus($program, $encounter, 'Year2019.Mips076', MeasureStatusValue.EXCEPTION, "6030F-1P");
end

rule 'Year2019.Mips076.Gap.6030F-8P'
when
	EncounterDenominator($program: program, $encounter: clinicalActivity, measure == 'Year2019.Mips076')
	and exists (
		ClinicalActivity(
			startsDuring($encounter),
			codeModifiers contains '8P',
			withValueSet("MipsYear2019", "PERFORMANCE_NOT_MET_6030F_8P")
		)
	)
then
	controlSet.addEncounterMeasureStatus($program, $encounter, 'Year2019.Mips076', MeasureStatusValue.GAP, "6030F-8P");
end

rule 'Year2019.Mips076.Gap.nodata'
when
	EncounterDenominator($program: program, $encounter: clinicalActivity, measure == 'Year2019.Mips076')
then
	controlSet.addEncounterMeasureStatus($program, $encounter, 'Year2019.Mips076', MeasureStatusValue.GAP, "nodata");
end
