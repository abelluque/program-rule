package com.ablehealth;

import com.ablehealth.model.*
import com.ablehealth.payloads.*;
import com.ablehealth.results.*;

global PatientResults controlSet;

rule 'Year2019.Mips340.Denominator'
when
  $program: Program(rules contains 'measure.Mips.2019.Mips340')
  $encounter: ClinicalActivity(
    startsDuring($program.measurementPeriod),
    withValueSet("MipsYear2019", "MIPS_340_ENCOUNTER")
  )
  exists Diagnosis(
    startsBefore($program.measurementPeriod.end.minusMonths(21).plusDays(1)),
    withValueSet("MipsYear2019", "HIV_AIDS")
  )
then
  insert(new EncounterDenominator($program, $encounter, 'Year2019.Mips340'));
end

rule 'Year2019.Mips340.Exclusion.exclusion_1'
when
  EncounterDenominator($program: program, $encounter: clinicalActivity, measure == 'Year2019.Mips340')
  $patient: Patient()
  (
    exists ClinicalActivity(
      startsDuring($program.measurementPeriod.end.minusMonths(24).plusDays(1),$program.measurementPeriod.end),
      withValueSet("MipsYear2019", "DENOMINATOR_EXCLUSION_G9751")
    )
    or exists Diagnosis(
      startsDuring($program.measurementPeriod.end.minusMonths(24).plusDays(1),$program.measurementPeriod.end),
      withValueSet("VsacYear2019", "EXPIRED")
    )
  )
then
  controlSet.addPatientMeasureStatus($program, $patient, 'Year2019.Mips340', MeasureStatusValue.EXCLUSION, "exclusion_1");
  controlSet.addProviderPatientMeasureStatus($program, $patient, $encounter.providerExternalId, 'Year2019.Mips340', MeasureStatusValue.EXCLUSION, 'exclusion_1');
end

rule 'Year2019.Mips340.Success.G9247'
when
  EncounterDenominator($program: program, $encounter: clinicalActivity, measure == 'Year2019.Mips340')
  $patient: Patient()
  (
    exists ClinicalActivity(
      startsDuring($program.measurementPeriod),
      withValueSet("MipsYear2019", "PERFORMANCE_MET_G9247")
    )
    or (
      $visit1: ClinicalActivity(
        startsDuring($program.measurementPeriod.end.minusMonths(24).plusDays(1),$program.measurementPeriod.end.minusMonths(18)),
        withValueSet("VsacYear2019", "OUTPATIENT")
      )
      and $visit2: ClinicalActivity(
        startsDuring($program.measurementPeriod.end.minusMonths(18).plusDays(1),$program.measurementPeriod.end.minusMonths(12)),
        withValueSet("VsacYear2019", "OUTPATIENT")
      )
      and $visit3: ClinicalActivity(
        startsDuring($program.measurementPeriod.end.minusMonths(12).plusDays(1),$program.measurementPeriod.end.minusMonths(6)),
        withValueSet("VsacYear2019", "OUTPATIENT")
      )
      and $visit4: ClinicalActivity(
        startsDuring($program.measurementPeriod.end.minusMonths(6).plusDays(1),$program.measurementPeriod.end),
        withValueSet("VsacYear2019", "OUTPATIENT")
      )
      // Ensure that there are visits within each period that are more than 60 days after a visit in the previous period
      and exists ClinicalActivity(
        startsDuring($program.measurementPeriod.end.minusMonths(18).plusDays(1),$program.measurementPeriod.end.minusMonths(12)),
        startsAfter($visit1.startDate.plusDays(60)),
        withValueSet("VsacYear2019", "OUTPATIENT")
      )
      and exists ClinicalActivity(
        startsDuring($program.measurementPeriod.end.minusMonths(12).plusDays(1),$program.measurementPeriod.end.minusMonths(6)),
        startsAfter($visit2.startDate.plusDays(60)),
        withValueSet("VsacYear2019", "OUTPATIENT")
      )
      and exists ClinicalActivity(
        startsDuring($program.measurementPeriod.end.minusMonths(6).plusDays(1),$program.measurementPeriod.end),
        startsAfter($visit3.startDate.plusDays(60)),
        withValueSet("VsacYear2019", "OUTPATIENT")
      )
    )
  )
then
  controlSet.addPatientMeasureStatus($program, $patient, 'Year2019.Mips340', MeasureStatusValue.SUCCESS, "G9247");
  controlSet.addProviderPatientMeasureStatus($program, $patient, $encounter.providerExternalId, 'Year2019.Mips340', MeasureStatusValue.SUCCESS, 'G9247');
end

rule 'Year2019.Mips340.Gap.G9246'
when
  EncounterDenominator($program: program, $encounter: clinicalActivity, measure == 'Year2019.Mips340')
  $patient: Patient()
then
  controlSet.addPatientMeasureStatus($program, $patient, 'Year2019.Mips340', MeasureStatusValue.GAP, 'G9246');
  controlSet.addProviderPatientMeasureStatus($program, $patient, $encounter.providerExternalId, 'Year2019.Mips340', MeasureStatusValue.GAP, 'G9246');
end
