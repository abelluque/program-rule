package com.ablehealth;

import com.ablehealth.model.*
import com.ablehealth.payloads.*;
import com.ablehealth.results.*;

global PatientResults controlSet;

rule 'Year2019.Cdc.Denominator'
when
	$program: Program(
		rules contains 'measure.Hedis.2019.Cdc1' ||
		rules contains 'measure.Hedis.2019.Cdc2' ||
		rules contains 'measure.Hedis.2019.Cdc3' ||
		rules contains 'measure.Hedis.2019.Cdc4' ||
		rules contains 'measure.Hedis.2019.Cdc5' ||
		rules contains 'measure.Hedis.2019.Cdc6' ||
		rules contains 'measure.Hedis.2019.Cdc7'
	)
	$patient: Patient(
		getAgeInYearsAt($program.measurementPeriod.end) >= 18 &&
		getAgeInYearsAt($program.measurementPeriod.end) <= 75
	)
	not (
		ClinicalActivity(
			startsDuring($program.measurementPeriod),
			withValueSet("HedisYear2019", "HOSPICE")
		)
	)
	and (
		(
			$inpatientEncounter: ClinicalActivity(
				startsDuring($program.measurementPeriod.end.plusDays(1).minusMonths(24), $program.measurementPeriod.end),
				!hasModifier("GT"),
				!hasModifier("95"),
				withValueSet("HedisYear2019", "ACUTE_INPATIENT"),
				placeOfService == null || placeOfService != '02'
			)
			and exists Diagnosis(
				startsDuring($program.measurementPeriod.end.plusDays(1).minusMonths(24), $program.measurementPeriod.end),
				startsDuring($inpatientEncounter),
				withValueSet("HedisYear2019", "DIABETES")
			)
		)
		or (
			exists Medication(
				startsDuring($program.measurementPeriod.end.plusDays(1).minusMonths(24), $program.measurementPeriod.end),
				withValueSet("NcqaYear2019", "DIABETES_MEDICATIONS")
			)
		)
		or (
			$visit: ClinicalActivity(
				startsDuring($program.measurementPeriod.end.plusDays(1).minusMonths(24), $program.measurementPeriod.end),
					(
						!hasModifier("GT") &&
						!hasModifier("95") &&
						withValueSet("HedisYear2019", "NONACUTE_INPATIENT") &&
						(placeOfService == null || placeOfService != '02')
					) || (
						withValueSet("HedisYear2019", "OUTPATIENT") ||
						withValueSet("HedisYear2019", "OBSERVATION") ||
						withValueSet("HedisYear2019", "ED")
					)
			)
			and exists Diagnosis(
				startsDuring($program.measurementPeriod.end.plusDays(1).minusMonths(24),$program.measurementPeriod.end),
				startsDuring($visit),
				withValueSet("HedisYear2019", "DIABETES")
			)
			and (
				exists (
					$secondVisit: ClinicalActivity(
						!startsDuring($visit),
						startsDuring($program.measurementPeriod.end.plusDays(1).minusMonths(24), $program.measurementPeriod.end),
							(
								!hasModifier("GT") &&
								!hasModifier("95") &&
								withValueSet("HedisYear2019", "NONACUTE_INPATIENT") &&
								(placeOfService == null || placeOfService != '02')
							) || (
								withValueSet("HedisYear2019", "OUTPATIENT") ||
								withValueSet("HedisYear2019", "OBSERVATION") ||
								withValueSet("HedisYear2019", "ED")
							)
					)
					and exists Diagnosis(
						startsDuring($program.measurementPeriod.end.plusDays(1).minusMonths(24),$program.measurementPeriod.end),
						startsDuring($secondVisit),
						withValueSet("HedisYear2019", "DIABETES")
					)
				)
			)
			and (
				$inpatientEncounter2: ClinicalActivity(
					startsDuring($program.measurementPeriod.end.plusDays(1).minusMonths(24), $program.measurementPeriod.end),
					!hasModifier("GT"),
					!hasModifier("95"),
					placeOfService != '02' || placeOfService == null,
					withValueSet("HedisYear2019", "OUTPATIENT") ||
					withValueSet("HedisYear2019", "OBSERVATION") ||
					withValueSet("HedisYear2019", "ED") ||
					withValueSet("HedisYear2019", "NONACUTE_INPATIENT")
				)
				and exists Diagnosis(
					startsDuring($program.measurementPeriod.end.plusDays(1).minusMonths(24), $program.measurementPeriod.end),
					startsDuring($inpatientEncounter2),
					withValueSet("HedisYear2019", "DIABETES")
		    	)
			)
		)
	)
then
	insert(new PatientDenominator($program, $patient, 'Year2019.Cdc1'));
	insert(new PatientDenominator($program, $patient, 'Year2019.Cdc2'));
	insert(new PatientDenominator($program, $patient, 'Year2019.Cdc3'));
	insert(new PatientDenominator($program, $patient, 'Year2019.Cdc4'));
	insert(new PatientDenominator($program, $patient, 'Year2019.Cdc5'));
	insert(new PatientDenominator($program, $patient, 'Year2019.Cdc6'));
	insert(new PatientDenominator($program, $patient, 'Year2019.Cdc7'));
end

rule 'Year2019.Cdc.Exclusion.exclusion_1'
when
  PatientDenominator(
		$program: program,
		$patient: patient,
		measure == 'Year2019.Cdc1' ||
		measure == 'Year2019.Cdc2' ||
		measure == 'Year2019.Cdc3' ||
		measure == 'Year2019.Cdc4' ||
		measure == 'Year2019.Cdc5' ||
		measure == 'Year2019.Cdc6' ||
		measure == 'Year2019.Cdc7'
	)
  (
		exists Diagnosis(
			startsDuring($program.measurementPeriod.end.plusDays(1).minusMonths(24), $program.measurementPeriod.end),
			withValueSet("HedisYear2019", "DIABETES_EXCLUSIONS")
		) and not(
			Diagnosis(
				startsDuring($program.measurementPeriod.end.plusDays(1).minusMonths(24), $program.measurementPeriod.end),
				withValueSet("HedisYear2019", "DIABETES")
			)
		)
	)
then
	controlSet.addPatientMeasureStatus($program, $patient, 'Year2019.Cdc1', MeasureStatusValue.EXCLUSION, "exclusion_1");
	controlSet.addPatientMeasureStatus($program, $patient, 'Year2019.Cdc2', MeasureStatusValue.EXCLUSION, "exclusion_1");
	controlSet.addPatientMeasureStatus($program, $patient, 'Year2019.Cdc3', MeasureStatusValue.EXCLUSION, "exclusion_1");
	controlSet.addPatientMeasureStatus($program, $patient, 'Year2019.Cdc4', MeasureStatusValue.EXCLUSION, "exclusion_1");
	controlSet.addPatientMeasureStatus($program, $patient, 'Year2019.Cdc5', MeasureStatusValue.EXCLUSION, "exclusion_1");
	controlSet.addPatientMeasureStatus($program, $patient, 'Year2019.Cdc6', MeasureStatusValue.EXCLUSION, "exclusion_1");
	controlSet.addPatientMeasureStatus($program, $patient, 'Year2019.Cdc7', MeasureStatusValue.EXCLUSION, "exclusion_1");
end

rule 'Year2019.Cdc.Exclusion.exclusion_2'
when
  PatientDenominator(
		$program: program,
		$patient: patient,
		measure == 'Year2019.Cdc1' ||
		measure == 'Year2019.Cdc2' ||
		measure == 'Year2019.Cdc3' ||
		measure == 'Year2019.Cdc4' ||
		measure == 'Year2019.Cdc5' ||
		measure == 'Year2019.Cdc6' ||
		measure == 'Year2019.Cdc7'
	)
	(
		(
			(
				(
					exists ClinicalActivity(
						startsDuring($program.measurementPeriod),
						withValueSet("HedisYear2019", "FRAILTY")
					)
				)
				or (
					exists Diagnosis(
						startsDuring($program.measurementPeriod),
						withValueSet("HedisYear2019", "FRAILTY")
					)
				)
			)
			and (
				(
					$inpatient_encounter: ClinicalActivity(
						startsDuring($program.measurementPeriod),
						withValueSet("HedisYear2019", "ACUTE_INPATIENT")
					)
					and exists Diagnosis(
						startsDuring($program.measurementPeriod),
						startsDuring($inpatient_encounter),
						withValueSet("HedisYear2019", "ADVANCED_ILLNESS")
					)
				)
				or (
					exists Medication(
						startsDuring($program.measurementPeriod),
						withValueSet("NcqaYear2019", "DIABETES_MEDICATIONS"),
						prescribed == true
					)
				)
			)
		)
		or (
			(
				exists ClinicalActivity(
					startsDuring($program.measurementPeriod),
					withValueSet("HedisYear2019", "FRAILTY")
				)
				or exists Diagnosis(
					startsDuring($program.measurementPeriod),
					withValueSet("HedisYear2019", "FRAILTY")
				)
			)
			and accumulate(
				(
					$inpatient_encounter: ClinicalActivity(
						startsDuring($program.measurementPeriod),
						withValueSet("HedisYear2019", "ACUTE_INPATIENT")
					)
					and exists Diagnosis(
						startsDuring($program.measurementPeriod),
						startsDuring($inpatient_encounter),
						withValueSet("HedisYear2019", "ADVANCED_ILLNESS")
					)
				);
				$priorEncountersCount: count(1);
				$priorEncountersCount >= 2
			)
		)
	)

then
	controlSet.addPatientMeasureStatus($program, $patient, 'Year2019.Cdc1', MeasureStatusValue.EXCLUSION, "exclusion_2");
	controlSet.addPatientMeasureStatus($program, $patient, 'Year2019.Cdc2', MeasureStatusValue.EXCLUSION, "exclusion_2");
	controlSet.addPatientMeasureStatus($program, $patient, 'Year2019.Cdc3', MeasureStatusValue.EXCLUSION, "exclusion_2");
	controlSet.addPatientMeasureStatus($program, $patient, 'Year2019.Cdc4', MeasureStatusValue.EXCLUSION, "exclusion_2");
	controlSet.addPatientMeasureStatus($program, $patient, 'Year2019.Cdc5', MeasureStatusValue.EXCLUSION, "exclusion_2");
	controlSet.addPatientMeasureStatus($program, $patient, 'Year2019.Cdc6', MeasureStatusValue.EXCLUSION, "exclusion_2");
	controlSet.addPatientMeasureStatus($program, $patient, 'Year2019.Cdc7', MeasureStatusValue.EXCLUSION, "exclusion_2");
end
