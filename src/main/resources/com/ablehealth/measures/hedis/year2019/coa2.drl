package com.ablehealth;

import com.ablehealth.model.*
import com.ablehealth.payloads.*;
import com.ablehealth.results.*;

global PatientResults controlSet;

rule 'Year2019.Hedis.Coa2.SuccessReasons.PerformanceMet (Medication Review and List)'
when
    PatientDenominator($program: program, $patient: patient, measure == 'Year2019.Coa2')
    exists ClinicalActivity(
        startsDuring($program.measurementPeriod),
        withValueSet("HedisYear2019", "MEDICATION_REVIEW")
    )
    exists ClinicalActivity(
        startsDuring($program.measurementPeriod),
        withValueSet("HedisYear2019", "MEDICATION_LIST")
    )
then
    controlSet.addPatientMeasureStatus($program, $patient, 'Year2019.Coa2', MeasureStatusValue.SUCCESS, 'performance_met');
end

rule 'Year2019.Hedis.Coa2.SuccessReasons.PerformanceMet (Transitional Care)'
when
    PatientDenominator($program: program, $patient: patient, measure == 'Year2019.Coa2')
    exists ClinicalActivity(
        startsDuring($program.measurementPeriod),
        withValueSet("HedisYear2019", "TRANSITIONAL_CARE_MANAGEMENT_SERVICES")
    )
then
    controlSet.addPatientMeasureStatus($program, $patient, 'Year2019.Coa2', MeasureStatusValue.SUCCESS, 'performance_met');
end

rule 'Year2019.Hedis.Coa2.GapReasons.PerformanceNotMet'
when
    PatientDenominator($program: program, $patient: patient, measure == 'Year2019.Coa2')
then
    controlSet.addPatientMeasureStatus($program, $patient, 'Year2019.Coa2', MeasureStatusValue.GAP, 'performance_not_met');
end
