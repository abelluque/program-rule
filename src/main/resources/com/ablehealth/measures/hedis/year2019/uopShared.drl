package com.ablehealth;

import com.ablehealth.model.*
import com.ablehealth.payloads.*;
import com.ablehealth.results.*;

global PatientResults controlSet;

declare Year2019UopFourProviders
end

declare Year2019UopFourPharmacyNpis
end

rule 'Year2019.Hedis.Uop.FourProviders'
when
    PatientDenominator(
      $program: program,
      $patient: patient,
      measure == 'Year2019.UopRate1' ||
      measure == 'Year2019.UopRate3'
    )
    java.util.Set($medicationWithProviderSize:size) from accumulate (
        $medicationWithProvider: Medication(
            startsDuring($program.measurementPeriod),
            withValueSet("NcqaYear2019", "OPIOID_MEDICATIONS"),
            prescribed == true,
            providerExternalId != null,
            providerExternalId.empty == false
        );
        collectSet($medicationWithProvider.providerExternalId)
    )
    java.util.List($medicationWithoutProviderSize:size) from accumulate (
        $medicationWithoutProvider: Medication(
            startsDuring($program.measurementPeriod),
            withValueSet("NcqaYear2019", "OPIOID_MEDICATIONS"),
            prescribed == true,
            providerExternalId == null || providerExternalId.empty
        );
        collectList($medicationWithoutProvider.providerExternalId)
    )
    eval(($medicationWithProviderSize + $medicationWithoutProviderSize) >= 4)
then
    insert(new Year2019UopFourProviders());
end

rule 'Year2019.Hedis.Uop.FourPharmacyNpis'
when
    PatientDenominator(
      $program: program,
      $patient: patient,
      measure == 'Year2019.UopRate2' ||
      measure == 'Year2019.UopRate3'
    )
    java.util.Set($medicationWithPharmacyNpiSize:size) from accumulate (
        $medicationWithPharmacyNpi: Medication(
            startsDuring($program.measurementPeriod),
            withValueSet("NcqaYear2019", "OPIOID_MEDICATIONS"),
            prescribed == true,
            pharmacyNpi != null,
            pharmacyNpi.empty == false
        );
        collectSet($medicationWithPharmacyNpi.pharmacyNpi)
    )
    java.util.List($medicationWithoutPharmacyNpiSize:size) from accumulate (
        $medicationWithoutPharmacyNpi: Medication(
            startsDuring($program.measurementPeriod),
            withValueSet("NcqaYear2019", "OPIOID_MEDICATIONS"),
            prescribed == true,
            pharmacyNpi == null || pharmacyNpi.empty
        );
        collectList($medicationWithoutPharmacyNpi.pharmacyNpi)
    )
    eval(($medicationWithPharmacyNpiSize + $medicationWithoutPharmacyNpiSize) >= 4)
then
    insert(new Year2019UopFourPharmacyNpis());
end

rule 'Year2019.Hedis.Uop.Denominator'
when
    $program: Program(
      rules contains 'measure.Hedis.2019.UopRate1' ||
      rules contains 'measure.Hedis.2019.UopRate2' ||
      rules contains 'measure.Hedis.2019.UopRate3'
    )
    $patient: Patient(getAgeInYearsAt($program.measurementPeriod.start) >= 18)
    $firstMedication: Medication(
      startsDuring($program.measurementPeriod),
      withValueSet("NcqaYear2019", "OPIOID_MEDICATIONS"),
      prescribed == true
    )
    exists Medication(
      startsDuring($program.measurementPeriod),
      startsAfter($firstMedication.startDate),
      withValueSet("NcqaYear2019", "OPIOID_MEDICATIONS"),
      prescribed == true
    )
    accumulate(
        $m: Medication(
          startsDuring($program.measurementPeriod),
          withValueSet("NcqaYear2019", "OPIOID_MEDICATIONS"),
          prescribed == true
        );
        $totalDays: sum($m.totalDaysSupplied($program.measurementPeriodEndDate));
        $totalDays >= 15
    )
    not ClinicalActivity(
        startsDuring($program.measurementPeriod),
        withValueSet("HedisYear2019", "HOSPICE")
    )
then
    insert(new PatientDenominator($program, $patient, 'Year2019.UopRate1'));
    insert(new PatientDenominator($program, $patient, 'Year2019.UopRate2'));
    insert(new PatientDenominator($program, $patient, 'Year2019.UopRate3'));
end
