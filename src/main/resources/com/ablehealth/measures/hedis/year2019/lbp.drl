package com.ablehealth;

import com.ablehealth.model.*
import com.ablehealth.payloads.*;
import com.ablehealth.results.*;
import java.time.temporal.ChronoUnit;

global PatientResults controlSet;

declare LowBackPain
	encounter: ClinicalActivity
end

declare LowBackPainDuringIndexPeriod
	encounter: ClinicalActivity
end

declare FirstLowBackPainEncounter
	encounter: ClinicalActivity
end

rule 'Year2019.Hedis.LowBackPain'
when
    $program: Program(rules contains 'measure.Hedis.2019.Lbp')
 	$encounter: ClinicalActivity(
		startsDuring($program.measurementPeriod.end.plusDays(1).minusMonths(18), $program.measurementPeriod.end),
		withValueSet("HedisYear2019", "OUTPATIENT") ||
		withValueSet("HedisYear2019", "OBSERVATION") ||
		withValueSet("HedisYear2019", "ED") ||
		withValueSet("HedisYear2019", "OSTEOPATHIC_AND_CHIROPRACTIC_MANIPULATIVE_TREATMENT") ||
		withValueSet("HedisYear2019", "PHYSICAL_THERAPY") ||
		withValueSet("HedisYear2019", "TELEPHONE_VISITS") ||
		withValueSet("HedisYear2019", "ONLINE_ASSESSMENTS"))
	and exists Diagnosis(
		startsDuring($encounter),					    
	    withValueSet("HedisYear2019", "UNCOMPLICATED_LOW_BACK_PAIN"))
	and not (exists ClinicalActivity(
		startsDuring($encounter),
		withValueSet("HedisYear2019", "INPATIENT_STAY")))
then
	 insert(new LowBackPain($encounter));
end

rule 'Year2019.Hedis.LowBackPainDuringIndexPeriod'
when 
	$program: Program(rules contains 'measure.Hedis.2019.Lbp')
	LowBackPain($encounter: encounter,
		$encounter.startsDuring($program.measurementPeriod.start,$program.measurementPeriod.end.minusDays(28))
	)
then
	insert(new LowBackPainDuringIndexPeriod($encounter));
end

rule 'Year2019.Hedis.FirstLowBackPainEncounter'
when
	$program: Program(rules contains 'measure.Hedis.2019.Lbp')
	$firstPain: ClinicalActivity() from accumulate (
		LowBackPainDuringIndexPeriod($encounter: encounter),
		earliestClinicalActivity($encounter)
	)
then
	insert(new FirstLowBackPainEncounter($firstPain));
end

rule 'Year2019.Lbp.Denominator'
when
    $program: Program(rules contains 'measure.Hedis.2019.Lbp')
	$patient: Patient(
		getAgeInYearsAt($program.measurementPeriod.end) >= 19 && 
		getAgeInYearsAt($program.measurementPeriod.end) <= 50
	)
	not ( exists (ClinicalActivity(
		startsDuring($program.measurementPeriod),
		withValueSet("MipsYear2019", "MIPS_HOSPICE_SERVICE")||
		withValueSet("VsacYear2019", "PALLIATIVE_CARE")))
	)
	and LowBackPainDuringIndexPeriod($encounterPain: encounter)
    and not (
 		FirstLowBackPainEncounter($encounterInpatientStay: encounter)
		and 
		LowBackPain(
				$encounter: encounter,
				$encounter.startsDuring($encounterInpatientStay.startDate.minusDays(180),$encounterInpatientStay.startDate.minusDays(1))
			)
	)
then
	insert(new PatientDenominator($program, $patient, 'Year2019.Lbp'));
end

rule 'Year2019.Lbp.Exclusion.exclusion_1'
when
    PatientDenominator($program: program, $patient: patient, measure == 'Year2019.Lbp')
    (
	    (
	    	FirstLowBackPainEncounter($encounter: encounter)
	    	and (exists Diagnosis(
				    startsOnOrBefore($encounter.startDate.plusDays(28)),
					withValueSet("HedisYear2019", "MALIGNANT_NEOPLASMS") ||
					withValueSet("HedisYear2019", "OTHER_NEOPLASMS") ||
					withValueSet("HedisYear2019", "HISTORY_OF_MALIGNANT_NEOPLASM") ||
					withValueSet("HedisYear2019", "HIV") ||
					withValueSet("HedisYear2019", "ORGAN_TRANSPLANT_OTHER_THAN_KIDNEY") ||
					withValueSet("HedisYear2019", "KIDNEY_TRANSPLANT")
				)
				or (exists Diagnosis(
					overlaps($encounter.startDate.minusMonths(3),$encounter.startDate.plusDays(28)),
					withValueSet("HedisYear2019", "TRAUMA"))
				)
				or (exists Diagnosis(
					overlaps($encounter.startDate.minusMonths(12),$encounter.startDate.plusDays(28)),
					withValueSet("HedisYear2019", "IV_DRUG_ABUSE") ||
					withValueSet("HedisYear2019", "NEUROLOGIC_IMPAIRMENT") ||
					withValueSet("HedisYear2019", "SPINAL_INFECTION"))
				)
			)
		)
		or  exists( Medication(
			startsDuring($program.measurementPeriod.end.plusDays(1).minusMonths(24), $program.measurementPeriod.end),
			withValueSet("NcqaYear2019", "CORTICOSTEROID_MEDICATIONS") ||
			withValueSet("VsacYear2019", "CORTICOSTEROIDS"),
			(startDate!=null && stopDate !=null && ChronoUnit.DAYS.between(stopDate,startDate) >= 90)
			)
		)
	)
then
    controlSet.addPatientMeasureStatus($program, $patient, 'Year2019.Lbp', MeasureStatusValue.EXCLUSION, "exclusion_1");
end

rule 'Year2019.Lbp.Success.performance_met'
when
    PatientDenominator($program: program, $patient: patient, measure == 'Year2019.Lbp')
    FirstLowBackPainEncounter($firstPain: encounter)
	$study: ClinicalActivity(
		startsDuring($firstPain.startDate,$firstPain.startDate.plusDays(28)),
		withValueSet("HedisYear2019", "IMAGING_STUDY"))
	and exists Diagnosis(
		startsDuring($study),
		withValueSet("HedisYear2019", "UNCOMPLICATED_LOW_BACK_PAIN")) 
then
	controlSet.addPatientMeasureStatus($program, $patient, 'Year2019.Lbp', MeasureStatusValue.SUCCESS, "performance_met");
end

rule 'Year2019.Lbp.Gap.performance_not_met'
when
    PatientDenominator($program: program, $patient: patient, measure == 'Year2019.Lbp')
then
	controlSet.addPatientMeasureStatus($program, $patient, 'Year2019.Lbp', MeasureStatusValue.GAP, "performance_not_met");
end

