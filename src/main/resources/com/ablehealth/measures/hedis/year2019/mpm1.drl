package com.ablehealth;

import com.ablehealth.model.*
import com.ablehealth.payloads.*;
import com.ablehealth.results.*;

import accumulate com.ablehealth.functions.EarliestClinicalActivityAccumulateFunction earliestClinicalActivity;

global PatientResults controlSet;

rule 'Year2019.Mpm1.Denominator'
when
	$program: Program(rules contains 'measure.Hedis.2019.Mpm1')
	$patient: Patient()
	and exists (
		Medication(
			startsOnOrBefore($program.measurementPeriod.start),
			stopDate == null || endsOnOrAfter($program.measurementPeriod.end),
			withValueSet("VsacYear2019", "ACE_INHIBITOR_OR_ARB")
		)
		or accumulate(
			$m: Medication(
			  overlaps($program.measurementPeriod),
			  withValueSet("VsacYear2019", "ACE_INHIBITOR_OR_ARB")
			);
			$totalDays: sum($m.totalDaysSupplied($program.measurementPeriodEndDate));
			$totalDays >= 180
		)
	)
	and not (
		exists ClinicalActivity(
			startsDuring($program.measurementPeriod),
			withValueSet("MipsYear2019", "MIPS_HOSPICE_SERVICE") ||
			withValueSet("VsacYear2019", "PALLIATIVE_CARE")
		)
	)
then
	insert(new PatientDenominator($program, $patient, 'Year2019.Mpm1'));
end

rule 'Year2019.Mpm1.Exclusion.exclusion_1'
when
	PatientDenominator($program: program, $patient: patient, measure == 'Year2019.Mpm1')
	and exists (
		ClinicalActivity(
			startsDuring($program.measurementPeriod),
			withValueSet("HedisYear2019", "ACUTE_INPATIENT") ||
			withValueSet("HedisYear2019", "NONACUTE_INPATIENT")
		)
	)
then
	controlSet.addPatientMeasureStatus($program, $patient, 'Year2019.Mpm1', MeasureStatusValue.EXCLUSION, "exclusion_1");
end

rule 'Year2019.Mpm1.Success.performance_met'
when
	PatientDenominator($program: program, $patient: patient, measure == 'Year2019.Mpm1')
	and exists (
		ClinicalActivity(
			startsDuring($program.measurementPeriod),
			withValueSet("HedisYear2019", "LAB_PANEL")
		)
		or (
			(
				ClinicalActivity(
					startsDuring($program.measurementPeriod),
					withValueSet("HedisYear2019", "SERUM_CREATININE")
				)
				or LaboratoryTestPerformed(
					startsDuring($program.measurementPeriod),
					withValueSet("HedisYear2019", "SERUM_CREATININE")
				)
			)
			and (
				ClinicalActivity(
					startsDuring($program.measurementPeriod),
					withValueSet("HedisYear2019", "SERUM_POTASSIUM")
				)
				or LaboratoryTestPerformed(
					startsDuring($program.measurementPeriod),
					withValueSet("HedisYear2019", "SERUM_POTASSIUM")
				)
			)
		)
	)
then
	controlSet.addPatientMeasureStatus($program, $patient, 'Year2019.Mpm1', MeasureStatusValue.SUCCESS, "performance_met");
end

rule 'Year2019.Mpm1.Gap.performance_not_met'
when
	PatientDenominator($program: program, $patient: patient, measure == 'Year2019.Mpm1')
then
	controlSet.addPatientMeasureStatus($program, $patient, 'Year2019.Mpm1', MeasureStatusValue.GAP, "performance_not_met");
end
