package com.ablehealth.measures.hedis.year2019;

import com.ablehealth.model.*
import com.ablehealth.payloads.*;
import com.ablehealth.results.*;

import accumulate com.ablehealth.functions.EarliestClinicalActivityAccumulateFunction earliestClinicalActivity;

global PatientResults controlSet;

declare Fracture
	encounter: ClinicalActivity
end

declare FirstFractureDuringIndexingPeriod
	encounter: ClinicalActivity
end

rule 'Year2019.Omw.Fracture'
when
	$program: Program(rules contains 'measure.Hedis.2019.Omw')
	$fracture: ClinicalActivity(
		startsDuring($program.measurementPeriod.end.plusDays(1).minusMonths(24), $program.measurementPeriod.end),
		withValueSet("HedisYear2019", "OUTPATIENT") ||
		withValueSet("HedisYear2019", "OBSERVATION") ||
		withValueSet("HedisYear2019", "ED") ||
		withValueSet("HedisYear2019", "INPATIENT_STAY")
	)
	and (
		exists (
			ClinicalActivity(
				startsDuring($fracture),
				withValueSet("HedisYear2019", "FRACTURES")
			)
			or Diagnosis(
				startsDuring($fracture),
				withValueSet("HedisYear2019", "FRACTURES")
			)
		)
	)
then
	insert(new Fracture($fracture));
end

rule 'Year2019.Omw.FirstFractureDuringIndexingPeriod'
when
	$program: Program(rules contains 'measure.Hedis.2019.Omw')
	$firstFracture: ClinicalActivity() from accumulate (
		Fracture(
			$fracture: encounter,
			$fracture.startsDuring(
				$program.measurementPeriod.end.plusDays(1).minusMonths(18),
				$program.measurementPeriod.end.minusMonths(6)
			)
		),
		earliestClinicalActivity($fracture)
	)
then
	insert(new FirstFractureDuringIndexingPeriod($firstFracture));
end

rule 'Year2019.Omw.Denominator'
when
	$program: Program(rules contains 'measure.Hedis.2019.Omw')
	$patient: Patient(
		isFemale(),
		getAgeInYearsAt($program.measurementPeriod.end) >= 67 &&
		getAgeInYearsAt($program.measurementPeriod.end) <= 85
	)
	and exists(
		Fracture(
			$fracture1: encounter,
			$fracture1.startsDuring(
				$program.measurementPeriod.end.plusDays(1).minusMonths(18),
				$program.measurementPeriod.end.minusMonths(6)
			)
		)
		and not (
			FirstFractureDuringIndexingPeriod($firstFracture: encounter)
			and Fracture(
				$fracture: encounter,
				$firstFracture.startsAfter($fracture.startDate) &&
				$firstFracture.startsOnOrBefore($fracture.startDate.plusDays(60))
			)
		)
	)
	and not (
		ClinicalActivity(
			startsDuring($program.measurementPeriod),
			withValueSet("MipsYear2019", "MIPS_HOSPICE_SERVICE") ||
			withValueSet("VsacYear2019", "PALLIATIVE_CARE")
		)
	)
then
	insert(new PatientDenominator($program, $patient, 'Year2019.Omw'));
end

rule 'Year2019.Omw.Exclusion.exclusion_1'
when
	PatientDenominator($program: program, $patient: patient, measure == 'Year2019.Omw')
	FirstFractureDuringIndexingPeriod($firstFracture: encounter)
	and exists (
		ClinicalActivity(
			startsDuring($firstFracture.startDate.minusDays(730), $firstFracture.startDate.minusDays(1)),
			withValueSet("HedisYear2019", "BONE_MINERAL_DENSITY_TESTS") ||
			withValueSet("MipsYear2019", "PERFORMANCE_MET_3095F") ||
			withValueSet("MipsYear2019", "PERFORMANCE_MET_G8399")
		)
		or ClinicalActivity(
			startsDuring($firstFracture.startDate.minusDays(365), $firstFracture.startDate.minusDays(1)),
			withValueSet("HedisYear2019", "OSTEOPOROSIS_MEDICATIONS") ||
			withValueSet("MipsYear2019", "PERFORMANCE_MET_G8633")
		)
		or Medication(
			startsBefore($firstFracture.stopDate) &&
			(stopDate == null || endsOnOrAfter($firstFracture.startDate.minusDays(365))),
			withValueSet("NcqaYear2019", "OSTEOPOROSIS_MEDICATIONS")
		)
	)
then
	controlSet.addPatientMeasureStatus($program, $patient, 'Year2019.Omw', MeasureStatusValue.EXCLUSION, "exclusion_1");
end

rule 'Year2019.Omw.Success.performance_met'
when
	PatientDenominator($program: program, $patient: patient, measure == 'Year2019.Omw')
	FirstFractureDuringIndexingPeriod($firstFracture: encounter)
	and (
		exists ClinicalActivity(
			startsDuring(
				$firstFracture.startDate,
				$firstFracture.startDate.plusDays(180)
			),
			withValueSet("HedisYear2019", "BONE_MINERAL_DENSITY_TESTS") ||
			withValueSet("HedisYear2019", "OSTEOPOROSIS_MEDICATIONS")
		)
		or exists ClinicalActivity(
			startsDuring(
				$firstFracture.startDate,
				$firstFracture.startDate.plusDays(180)
			),
			codeModifiers == null,
			withValueSet("HedisYear2019", "PERFORMANCE_MET_3095F") ||
			withValueSet("HedisYear2019", "PERFORMANCE_MET_G8633")
		)
		or exists Medication(
			startsDuring(
				$firstFracture.startDate,
				$firstFracture.startDate.plusDays(180)
			),
			withValueSet("NcqaYear2019", "OSTEOPOROSIS_MEDICATIONS")
		)
		or exists ClinicalActivity(
			startsDuring($firstFracture),
			withValueSet("HedisYear2019", "LONG_ACTING_OSTEOPOROSIS_MEDICATIONS")
		)
	)
then
	controlSet.addPatientMeasureStatus($program, $patient, 'Year2019.Omw', MeasureStatusValue.SUCCESS, "performance_met");
end

rule 'Year2019.Omw.Gap.performance_not_met'
when
	PatientDenominator($program: program, $patient: patient, measure == 'Year2019.Omw')
then
	controlSet.addPatientMeasureStatus($program, $patient, 'Year2019.Omw', MeasureStatusValue.GAP, "performance_not_met");
end
