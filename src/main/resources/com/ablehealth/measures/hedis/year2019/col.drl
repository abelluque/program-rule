package com.ablehealth;

import com.ablehealth.model.*
import com.ablehealth.payloads.*;
import com.ablehealth.results.*;

global PatientResults controlSet;

rule 'Year2019.Col.Denominator'
when
	$program: Program(rules contains 'measure.Hedis.2019.Col')
	$patient: Patient(
		getAgeInYearsAt($program.measurementPeriod.end) >= 51 &&
		getAgeInYearsAt($program.measurementPeriod.end) <= 75
	)
	and not ClinicalActivity(
		startsDuring($program.measurementPeriod),
		withValueSet("HedisYear2019", "HOSPICE")
	)
then
	insert(new PatientDenominator($program, $patient, 'Year2019.Col'));
end

rule 'Year2019.Col.Exclusion.exclusion_1'
when
	PatientDenominator($program: program, $patient: patient, measure == 'Year2019.Col')
	(
		exists Diagnosis(
			startsOnOrBefore($program.measurementPeriod.end),
			withValueSet("HedisYear2019", "COLORECTAL_CANCER")
		)
		or exists ClinicalActivity(
			startsOnOrBefore($program.measurementPeriod.end),
			withValueSet("HedisYear2019", "COLORECTAL_CANCER") ||
			withValueSet("HedisYear2019", "TOTAL_COLECTOMY")
		)
	)
then
	controlSet.addPatientMeasureStatus($program, $patient, 'Year2019.Col', MeasureStatusValue.EXCLUSION, "exclusion_1");
end

rule 'Year2019.Col.Exclusion.exclusion_2'
when
	PatientDenominator(
		$program: program,
		$patient: patient,
		measure == 'Year2019.Col',
		$patient.getAgeInYearsAt($program.measurementPeriod.end) >= 66
	)
	and (
		exists Diagnosis(
			startsDuring($program.measurementPeriod),
			withValueSet("HedisYear2019", "FRAILTY")
		)
		or exists ClinicalActivity(
			startsDuring($program.measurementPeriod),
			withValueSet("HedisYear2019", "FRAILTY")
		)
	)
	and (
		(
			$inpatient_encounter: ClinicalActivity(
				startsDuring($program.measurementPeriod),
				withValueSet("HedisYear2019", "ACUTE_INPATIENT")
			)
			and exists Diagnosis(
				startsDuring($program.measurementPeriod),
				startsDuring($inpatient_encounter),
				withValueSet("HedisYear2019", "ADVANCED_ILLNESS")
			)
		)
		or exists Medication(
			startsDuring($program.measurementPeriod),
			prescribed == true,
			withValueSet("NcqaYear2019", "DEMENTIA_MEDICATIONS")
		)
		or accumulate (
			(
				$encounter: ClinicalActivity(
					startsDuring($program.measurementPeriod),
					withValueSet("HedisYear2019", "OUTPATIENT") ||
					withValueSet("HedisYear2019", "OBSERVATION") ||
					withValueSet("HedisYear2019", "ED") ||
					withValueSet("HedisYear2019", "NONACUTE_INPATIENT")
				)
				and exists Diagnosis(
					startsDuring($program.measurementPeriod),
					startsDuring($encounter),
					withValueSet("HedisYear2019", "ADVANCED_ILLNESS")
				)
			);
			$priorEncountersCount: count(1);
			$priorEncountersCount >= 2
		)
	)
then
	controlSet.addPatientMeasureStatus($program, $patient, 'Year2019.Col', MeasureStatusValue.EXCLUSION, "exclusion_2");
end

rule 'Year2019.Col.Success.performance_met'
when
	PatientDenominator($program: program, $patient: patient, measure == 'Year2019.Col')
	and (
		exists ClinicalActivity(
			startsDuring($program.measurementPeriod),
			withValueSet("MipsYear2019", "PERFORMANCE_MET_3017F"),
			codeModifiers.isEmpty()
		)
		or exists ClinicalActivity(
			startsDuring($program.measurementPeriod.end.plusDays(1).minusYears(10),$program.measurementPeriod.end),
			withValueSet("HedisYear2019", "COLONOSCOPY")
		)
		or exists ClinicalActivity(
			startsDuring($program.measurementPeriod.end.plusDays(1).minusYears(5),$program.measurementPeriod.end),
			withValueSet("HedisYear2019", "FLEXIBLE_SIGMOIDOSCOPY")
		)
		or exists LaboratoryTestPerformed(
			startsDuring($program.measurementPeriod),
			withValueSet("HedisYear2019", "FOBT")
		)
		or exists ClinicalActivity(
			startsDuring($program.measurementPeriod),
			withValueSet("HedisYear2019", "FOBT")
		)
		or exists LaboratoryTestPerformed(
			startsDuring($program.measurementPeriod.end.plusDays(1).minusYears(3),$program.measurementPeriod.end),
			withValueSet("HedisYear2019", "FIT_DNA")
		)
		or exists ClinicalActivity(
			startsDuring($program.measurementPeriod.end.plusDays(1).minusYears(3),$program.measurementPeriod.end),
			withValueSet("HedisYear2019", "FIT_DNA")
		)
		or exists ClinicalActivity(
			startsDuring($program.measurementPeriod.end.plusDays(1).minusYears(5),$program.measurementPeriod.end),
			withValueSet("HedisYear2019", "CT_COLONOGRAPHY")
		)
	)
then
	controlSet.addPatientMeasureStatus($program, $patient, 'Year2019.Col', MeasureStatusValue.SUCCESS, "performance_met");
end

rule 'Year2019.Col.Gap.performance_not_met'
when
	PatientDenominator($program: program, $patient: patient, measure == 'Year2019.Col')
then
	controlSet.addPatientMeasureStatus($program, $patient, 'Year2019.Col', MeasureStatusValue.GAP, "performance_not_met");
end
